---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { getEntry, type CollectionEntry } from "astro:content";
import Hero from "../_sections/Hero.astro";
import Goal from "../_sections/Goal.astro";
import Question from "../_sections/Question.astro";
import Features from "../_sections/Features.astro";
import Skills from "../_sections/Skills.astro";
import Pricing from "../_sections/Pricing.astro";
import CourseFAQ from "../_sections/CourseFAQ.astro";
import Profile from "@components/Profile.astro";
import BundledCourses from "../_sections/BundledCourses.astro";
import Curriculum from "../_sections/Curriculum.astro";

const { slug } = Astro.params;
const course = await getEntry("courses", slug!) as CollectionEntry<"courses">;
const frontmatter = course!.data;
const category = await getEntry("courseCategories", frontmatter.category.id) as CollectionEntry<"courseCategories">;
const {
  description,
  features,
  image,
  question,
  title,
} = frontmatter;

const courseList = course.data.bundledCourses ? await Promise.all(course.data.bundledCourses!.map(async (c) => await getEntry("courses", c.slug))) : [];
---

<BaseLayout {description} {title}>
  <article>
    <Hero {description} {image} {title} />
    <Goal>
      <slot name="goal" />
    </Goal>
    {
      question && (
        <Question color={category.data.color} image={question.image} {question}>
          <slot name="question" />
        </Question>
      )
    }
    <Features color={category.data.color} {features}>
      <slot name="feature1" slot="feature1" />
      <slot name="feature2" slot="feature2" />
      <slot name="feature3" slot="feature3" />
      <slot name="feature4" slot="feature4" />
      <slot name="feature5" slot="feature5" />
    </Features>
    <Skills color={category.data.color}>
      <slot name="skills" />
    </Skills>
    {category.id === "bundle" &&
      (
        <BundledCourses {courseList} />
      )
    }
    <Profile color={category.data.color} />
    <Curriculum color={category.data.color} courseSlug={course.slug} pricingPlanId={course.data.pricingPlanId} />
    <Pricing {course} color={category.data.color} />
    <CourseFAQ faq={course.data.faqs ?? []} color={category.data.color} />
  </article>
</BaseLayout>
