---
import Articles from "@/components/Articles.astro";
import AuthorWide from "@/components/AuthorWide.astro";
import FullContainer from "@/containers/FullContainer";
import BaseLayout from "@/layouts/BaseLayout/BaseLayout.astro";
import type {
  GetStaticPaths,
  InferGetStaticParamsType,
  InferGetStaticPropsType,
} from "astro";
import { getCollection } from "astro:content";

export const getStaticPaths = (async () => {
  const authors = await getCollection("authors"),
    articles = await getCollection("articles");

  return authors.map((author) => ({
    params: { id: author.id },
    props: {
      articles: articles.filter(
        (article) => article.data.author.id === author.id,
      ),
      author,
    },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { articles, author } = Astro.props,
  title = `Articles written by '${author.data.name}'`,
  structuredData = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "ProfilePage",
    mainEntity: {
      "@type": "Person",
      name: author.data.name,
      description: author.data.biography,
      identifier: author.id,
      image: author.data.photo.src,
    },
  });
---

<BaseLayout {title} description={title} {structuredData}>
  <FullContainer>
    <header class="pt-8 md:pt-16">
      <h1 class="mx-6 text-center text-content-1 lg:mx-8">
        {title}
      </h1>
    </header>
    <div class="my-8">
      <AuthorWide {author} loading="eager" />
    </div>
    <Articles {articles} />
  </FullContainer>
</BaseLayout>
