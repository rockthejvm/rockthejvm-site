---
import { getEntries, getEntry } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../../../components/FormattedDate.astro";
import type { MarkdownHeading } from "astro";
import TableOfContents from "../../../components/TableOfContents.astro";
import NarrowContainer from "../../../containers/NarrowContainer";
import AuthorSmall from "../../../components/AuthorSmall.astro";
import AuthorWide from "../../../components/AuthorWide.astro";
import Prose from "@components/Prose.astro";
import TagList from "@components/TagList.astro";
import ArticleSeries from "@components/ArticleSeries.astro";
import SocialShare from "@components/SocialShare.astro";
import TOC from "@components/icons/TOC.astro";
import CaretUp from "@components/icons/CaretUp.astro";
import FloatingActionMenuHelper from "../_components/FloatingActionMenuHelper";

interface Props {
  article: CollectionEntry<"articles">;
  headings: MarkdownHeading[];
  minutesRead: number;
}

const { article, headings, minutesRead } = Astro.props;
const frontmatter = article.data;
const {
  canonicalUrl,
  description,
  excerpt,
  heroImage,
  publishedDate,
  title,
  updatedDate,
} = frontmatter;
const author = await getEntry(
  frontmatter.author.collection,
  frontmatter.author.id,
);
const tags = await getEntries(frontmatter.tags);

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": title,
  // "image": heroImage.image.src,
  "genre": "software engineering",
  "keywords": tags.reduce(((a, b) => a + " " + b.id), ""),
  // "wordcount": "1120",
  "publisher": "Rock the JVM",
  "url": Astro.site,
  "datePublished": publishedDate,
  "dateCreated": publishedDate,
  "dateModified": updatedDate,
  "description": description,
  // "articleBody": "You can paste your entire post in here, and yes it can get really really long.",
  "author": {
    "@type": "Person",
    "name": author.data.name
  }
}
---

<BaseLayout
  article={{
    author: {
      name: author.data.name,
      // add a twitter username if available
      twitter: author.data.socials?.twitter,
    },
    updatedTime: updatedDate,
    publishedTime: publishedDate,
    section: "Programming",
    tags: tags.map((tag) => tag.id),
    // video: video?.data.canonicalUrl
    //   ? new URL(video.data.canonicalUrl)
    //   : undefined,
  }}
  canonicalUrl={canonicalUrl ? new URL(canonicalUrl) : undefined}
  description={description ?? excerpt}
  image={heroImage
    ? { alt: heroImage.alt, src: heroImage.image.src }
    : undefined}
  structuredData={JSON.stringify(structuredData)}
  {title}
  type="article"
>
  <NarrowContainer>
    <article class="pt-16 md:pt-8">
      <header>
        <Prose class="max-w-none">
          <h1>{title}</h1>
        </Prose>
        <a href={`/authors/${frontmatter.author.id}`} class="mt-auto">
          <AuthorSmall {author} {minutesRead}>
            <p>
              Last updated: {
                updatedDate ? (
                  <FormattedDate date={updatedDate} />
                ) : (
                  <FormattedDate date={publishedDate} />
                )
              }
            </p>
          </AuthorSmall>
        </a>
        <Prose>
          <TagList {tags} />
        </Prose>
        <SocialShare />
      </header>
      <!-- <div class="lg:hidden fixed bottom-4 right-4">
        <a class="flex flex-col align-center justify-center content-center" href="#toc">
          <div class="mx-auto"><CaretUp /></div>
          <TOC />
        </a>
      </div> -->
      <div class="xl:flex xl:flex-row">
        <Prose class="prose-h2:mt-2 my-8">
          <div id="toc" class="xl:hidden"><TableOfContents {headings} /></div>
          <slot />
          <ArticleSeries {article} />
        </Prose>
        <div
          class="hidden sticky max-w-sm top-0 self-start no-scrollbar max-h-[90vh] ml-2 px-2 overflow-y-scroll left-full xl:block justify-end"
        >
          <Prose class="prose-h2:mt-2"><TableOfContents {headings} /></Prose>
        </div>
      </div>
      <footer>
        <SocialShare/>
        <AuthorWide {author} />
      </footer>
    </article>
  </NarrowContainer>
  <FloatingActionMenuHelper client:load >
    <Prose class="prose-h2:mt-2" slot="toc"><TableOfContents {headings} hideButtons={true} /></Prose>
    <SocialShare slot="share" />
  </FloatingActionMenuHelper>
</BaseLayout>
