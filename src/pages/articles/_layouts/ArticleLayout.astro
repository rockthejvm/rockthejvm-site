---
import { getEntries, getEntry } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../../../components/FormattedDate.astro";
import type { MarkdownHeading } from "astro";
import TableOfContents from "../../../components/TableOfContents.astro";
import NarrowContainer from "../../../containers/NarrowContainer";
import AuthorSmall from "../../../components/AuthorSmall.astro";
import AuthorWide from "../../../components/AuthorWide.astro";
import Prose from "@components/Prose.astro";
import TagList from "@components/TagList.astro";
import ArticleSeries from "@components/ArticleSeries.astro";

interface Props {
  article: CollectionEntry<"articles">;
  headings: MarkdownHeading[];
  minutesRead: number;
}

const { article, headings, minutesRead } = Astro.props;
const frontmatter = article.data;
const {
  canonicalUrl,
  description,
  excerpt,
  heroImage,
  publishedDate,
  title,
  updatedDate,
} = frontmatter;
const author = await getEntry(
  frontmatter.author.collection,
  frontmatter.author.id,
);
// const category = await getEntry("articleCategories", frontmatter.category.id);
const tags = await getEntries(frontmatter.tags);
// const series = frontmatter.series
//   ? await getEntry(frontmatter.series.collection, frontmatter.series.id)
//   : undefined;
// const video = frontmatter.video
//   ? await getEntry(frontmatter.video.collection, frontmatter.video.id)
//   : undefined;

// const banner: ImageMetadata = "../assets/images/banner.jpeg";
---

<BaseLayout
  article={{
    author: {
      name: author.data.name,
      // add a twitter username if available
      twitter: author.data.socials?.twitter,
    },
    updatedTime: updatedDate,
    publishedTime: publishedDate,
    section: "Programming",
    tags: tags.map((tag) => tag.id),
    // video: video?.data.canonicalUrl
    //   ? new URL(video.data.canonicalUrl)
    //   : undefined,
  }}
  canonicalUrl={canonicalUrl ? new URL(canonicalUrl) : undefined}
  description={description ?? excerpt}
  image={heroImage
    ? { alt: heroImage.alt, src: heroImage.image.src }
    : undefined}
  {title}
  type="article"
>
  <NarrowContainer>
    <article class="pt-16 md:pt-8">
      <header>
        <Prose class="max-w-none">
          <h1>{title}</h1>
        </Prose>
        <a href={`/authors/${frontmatter.author.id}`} class="mt-auto">
          <AuthorSmall {author} {minutesRead}>
            <p>
              Last updated: {
                updatedDate ? (
                  <FormattedDate date={updatedDate} />
                ) : (
                  <FormattedDate date={publishedDate} />
                )
              }
            </p>
          </AuthorSmall>
        </a>
        <TagList {tags} />
      </header>
      <div class="xl:flex xl:flex-row">
        <Prose>
          <div class="xl:hidden"><TableOfContents {headings} /></div>
          <slot />
          <ArticleSeries {article} />
        </Prose>
        <div
          class="hidden sticky max-w-sm top-0 self-start max-h-[90vh] ml-2 px-2 overflow-y-scroll left-full xl:block justify-end"
        >
          <Prose><TableOfContents {headings} /></Prose>
        </div>
      </div>
      <footer>
        <AuthorWide {author} />
      </footer>
    </article>
  </NarrowContainer>
</BaseLayout>
