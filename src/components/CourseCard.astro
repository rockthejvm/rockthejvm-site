---
import { numberToPrice } from "@utils/numberToPrice";
import type { CollectionEntry } from "astro:content";
import BadgeLarge from "./BadgeLarge.astro";
import CourseCardLinks from "./CourseCardLinks.astro";
import MyPicture from "./MyPicture.astro";

interface Props {
  course: CollectionEntry<"courses">;
  pricingPlanId: number;
  couponCode?: string;
  holiday?: boolean;
  prices?: {
    old: number;
    new: number;
  };
}

const {
  course,
  holiday = false,
  couponCode,
  pricingPlanId,
  prices,
} = Astro.props;
---

<div
  class={`card-shadow card-shadow-color mt-8 w-full overflow-hidden rounded-2xl md:flex md:h-52`}
>
  <div
    class="relative mb-0 shrink-0 overflow-hidden md:mb-0 md:min-h-full md:rounded-l-2xl"
  >
    <a href={`/courses/${course.slug}`}>
      <div
        class="h-72 w-full overflow-hidden text-gray-300 md:h-full md:w-64 lg:w-96"
      >
        <MyPicture
          src={course.data.heroImage}
          alt={`${course.data.title}`}
          quality="mid"
          class="min-h-full min-w-full object-cover object-center"
        />
      </div>
    </a>
    {
      holiday && couponCode && (
        <CourseCardLinks slug={course.slug} {pricingPlanId} {couponCode} />
      )
    }
  </div>
  <div
    class={`my-0 flex size-full flex-col justify-center p-8 align-middle md:my-auto md:px-8 md:py-0 ${holiday ? "bg-holiday-secondary" : "bg-secondary"}`}
  >
    <span class="flex gap-x-2">
      <h3
        class={`text-center text-xl font-bold ${holiday ? "text-holiday-card-content-2" : "text-content-2"} hover:text-accent-2 md:text-left`}
      >
        {course.data.isFree && <BadgeLarge {holiday}> Free! </BadgeLarge>}
        {
          course.data.isNew && !course.data.isFree && (
            <BadgeLarge {holiday}> New! </BadgeLarge>
          )
        }
        <a
          href={`/courses/${course.slug}`}
          class={`${holiday ? "text-holiday-card-accent-1 hover:text-holiday-card-accent-2" : ""}`}
        >
          {course.data.title}
        </a>
        {
          prices && prices.old > 0 && (
            <span class="text-2xl font-bold">
              <s class={`${holiday ? "text-gray-300" : "text-content"}`}>
                ${numberToPrice(prices.old)}
              </s>
              <span
                class={`text-orange-500 ${holiday ? "text-holiday-card-accent-1" : "text-accent-1"}`}
              >
                ${numberToPrice(prices.new)}
              </span>
            </span>
          )
        }
      </h3>
    </span>
    <div
      class={`mt-1 ${holiday ? "text-holiday-card-content-1" : "text-content-1"}`}
    >
      <Fragment set:html={course.data.excerpt} />
    </div>
  </div>
</div>
