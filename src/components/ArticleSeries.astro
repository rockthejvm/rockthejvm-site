---
import ArticleSeriesHelper from "@components/ArticleSeriesHelper";
import type { CollectionEntry } from "astro:content";
import { getCollection, getEntry } from "astro:content";

interface Props {
  article: CollectionEntry<"articles">;
  label?: string | undefined;
  open?: boolean;
}

const { article, label, open = false } = Astro.props,
  articleSeriess = (await getCollection("seriess")).filter(
    (series) => series.data.members[0].collection === "articles",
  ),
  memberss = articleSeriess.map((series) => series.data.members),
  articless = await Promise.all(
    (memberss as CollectionEntry<"articles">[][]).map(async (members) =>
      Promise.all(
        members.map(async (member) => getEntry("articles", member.slug)),
      ),
    ),
  ),
  articleSeries = articless.find((articles) =>
    articles.map((article) => article.slug).includes(article.slug),
  );
---

{
  articleSeries && (
    <section
      class:list={[
        "bg-secondary",
        "from-secondary to-bkg",
        "divide-y divide-gray-200 overflow-hidden rounded-md shadow",
      ]}
    >
      <ArticleSeriesHelper
        {article}
        {articleSeries}
        {open}
        label={label}
        client:load
      />
    </section>
  )
}
