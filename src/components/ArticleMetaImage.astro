---
interface Props {
  authorImage: string;
  authorName: string;
  category: string;
  date: Date;
  minutesRead: number;
  tags: string[];
  title: string;
}

type URIComponent = string | number | boolean;

const _props = Astro.props;
const _params: Record<string, URIComponent> = {
  ..._props,
  date: _props.date.toISOString(),
  tags: _props.tags.join(","),
};
const _domain = "https://testworker.andrei-023.workers.dev";
const _path = "/";
const _queryString = Object.keys(_params)
  .map(
    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(_params[key])}`,
  )
  .join("&");
const imageURL = `${_domain}${_path}?${_queryString}`;
const imageAlt = `Header image for ${_props.authorName}'s ${_props.category} article "${_props.title}", estimated reading time: ${_props.minutesRead} minutes.`;
---

<meta property="og:image" content=`${imageURL}&protocol=og` />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:image:type" content="image/png" />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content=`${imageURL}&protocol=twitter` />
<meta property="twitter:image:alt" content={imageAlt} />
