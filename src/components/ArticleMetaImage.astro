---
type URIComponent = string | number | boolean;

interface Props {
  authorImage: URIComponent;
  authorName: URIComponent;
  logo: URIComponent;
  metadata1: URIComponent;
  metadata2: URIComponent;
  metadata3: URIComponent;
  tag1: URIComponent;
  tag2: URIComponent;
  tag3: URIComponent;
  title: URIComponent;
}

const _props = Astro.props;
const _domain = "https://og.rockthejvm.com";
const _path = "/";
const _queryString = Object.keys(_props)
  .map(
    (key) =>
      `${encodeURIComponent(key)}=${encodeURIComponent(_props[key as keyof Props])}`,
  )
  .join("&");
const imageURL = `${_domain}${_path}?${_queryString}&fontFamily=Roboto&fontVariant=regular&layout=article&layoutIndex=1`;
const imageAlt = `Header image for ${_props.authorName}'s article titled '${_props.title}'.`;
---

<meta property="og:image" content=`${imageURL}&configuration=og` />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:image:type" content="image/png" />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content=`${imageURL}&configuration=twitter` />
<meta property="twitter:image:alt" content={imageAlt} />
