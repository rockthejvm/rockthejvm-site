---
interface Props {
  stacked?: boolean;
  title?: string;
}

const { stacked = false, title } = Astro.props;
---

{
  stacked ? (
    <div class="bg-bkg py-8 md:py-0">
      <div class="mx-auto max-w-7xl px-6">
        {title && (
          <h2 class="max-w-xl text-balance text-xl font-semibold tracking-tight text-content-1 sm:text-2xl">
            {title}
          </h2>
        )}
        <form id="newsletter-form" class="w-full max-w-md pt-2 lg:col-span-5">
          <div class="flex gap-x-4">
            <label for="email" class="sr-only">
              {" "}
              Email address{" "}
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="min-w-0 flex-auto rounded-md bg-white px-3.5 py-2 text-base text-black placeholder-black outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-black focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
              placeholder="Enter your email"
            />
            <button
              type="submit"
              class="flex-none rounded-md bg-cta px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-accent-1 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
            >
              Subscribe
            </button>
          </div>
          <p class="mt-4 text-sm/6 text-content-1">
            This site is built on trust, and your data is safe. Check out the{" "}
            <a href="/policies/privacy" class="font-semibold">
              privacy&nbsp;policy
            </a>
            .
          </p>
        </form>
        <p
          id="confirmation-message"
          class="mt-4 hidden text-sm/6 text-green-200"
        >
          Thank you for subscribing! Check your email for confirmation.
        </p>
      </div>
    </div>
  ) : (
    <div class="bg-bkg py-8 sm:py-12 lg:py-16">
      <div class="mx-auto grid max-w-7xl grid-cols-1 gap-10 px-6 lg:grid-cols-12 lg:gap-8 lg:px-8">
        <h2 class="max-w-xl text-balance text-3xl font-semibold tracking-tight text-content-1 sm:text-4xl lg:col-span-7">
          Like what you see? Keep learning by subscribing to the newsletter!
        </h2>
        <form
          id="newsletter-form"
          class="w-full max-w-md lg:col-span-5 lg:pt-2"
        >
          <div class="flex gap-x-4">
            <label for="email" class="sr-only">
              {" "}
              Email address{" "}
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="min-w-0 flex-auto rounded-md bg-white px-3.5 py-2 text-base text-black placeholder-black outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-black focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
              placeholder="Enter your email"
            />
            <button
              type="submit"
              class="flex-none rounded-md bg-cta px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-accent-1 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
            >
              Subscribe
            </button>
          </div>
          <p class="mt-4 text-sm/6 text-content-1">
            This site is built on trust, and your data is safe. Check out the{" "}
            <a href="/policies/privacy" class="font-semibold">
              privacy&nbsp;policy
            </a>
            .
          </p>
        </form>
        <p
          id="confirmation-message"
          class="mt-4 hidden text-sm/6 text-green-200"
        >
          Thank you for subscribing! Check your email for confirmation.
        </p>
      </div>
    </div>
  )
}

<script>
  import { workers } from "@/data/site.json";
  import { z } from "astro/zod";

  const subscribeToNewsletterSchema = z.object({
      email: z.string().email(),
    }),
    subscribeToNewsletter = async (email: string) => {
      const url = workers.mailerlite,
        route = "/",
        body = JSON.stringify({
          email,
        }),
        response = await fetch(url + route, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body,
        });

      if (!response.ok) {
        throw new Error(
          "Failed to subscribe to the newsletter. Try again later.",
        );
      }

      return;
    };

  document.addEventListener("DOMContentLoaded", () => {
    const form: HTMLFormElement = document.querySelector("#newsletter-form")!,
      confirmationMessage = document.querySelector("#confirmation-message")!;

    form?.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(form);

      const { email } = subscribeToNewsletterSchema.parse({
        email: formData.get("email"),
      });

      try {
        await subscribeToNewsletter(email);
        form.style.display = "none";
        confirmationMessage.classList.remove("hidden");
      } catch (_) {
        alert("Failed to subscribe to the newsletter. Please try again later.");
      }
    });
  });
</script>
