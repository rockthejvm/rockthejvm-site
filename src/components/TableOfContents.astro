---
import type { MarkdownHeading } from "astro";
import { Icon } from "astro-icon/components";
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

interface Props {
  headings: MarkdownHeading[];
  hideButtons?: boolean;
  repositoryUrl?: string;
  videoId?: string;
}

const { headings, hideButtons, repositoryUrl, videoId } = Astro.props;

const filteredHeadings = headings.filter((heading) => heading.depth === 2);
---

{
  filteredHeadings.length >= 3 && (
    <nav>
      {!hideButtons && (
        <div class="mt-8 flex flex-row justify-start gap-x-4">
          {videoId && (
            <a href={`https://youtube.com/watch?v=${videoId}`}>
              <span class="inline-flex items-center gap-x-1.5 rounded-full bg-secondary px-2 py-1 text-sm font-medium text-content-1">
                <Icon
                  name="fa6-brands:youtube"
                  title="Article Video"
                  aria-hidden="true"
                  class="size-6"
                />
                Watch Now
              </span>
            </a>
          )}
          {repositoryUrl && (
            <a href={repositoryUrl}>
              <span class="inline-flex items-center gap-x-1.5 rounded-full bg-secondary px-2 py-1 text-sm font-medium text-content-1">
                <Icon
                  name="fa6-brands:github"
                  title="Article Repository"
                  aria-hidden="true"
                  class="size-6"
                />
                See Repository
              </span>
            </a>
          )}
        </div>
      )}
      <h2 class="text-content">Table of Contents</h2>
      <ol>
        {filteredHeadings.map((heading) => (
          <TableOfContentsHeading heading={heading} />
        ))}
      </ol>
    </nav>
  )
}
