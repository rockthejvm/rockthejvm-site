---
import type { CollectionEntry } from "astro:content";
import H2 from "./H2.astro";
import BackgroundGradient from "./BackgroundGradient.astro";

interface Props {
  color?: CollectionEntry<"courseCategories">["data"]["color"];
  title?: string;
  showGradient?: boolean;
  category?: CollectionEntry<"courseCategories">;
}

const { color, title, showGradient, category } = Astro.props;

// const colorString =
//   color === null
//     ? null
//     : color?.substring(0, 3) === "bg-"
//       ? color
//       : `bg-[${color}]`;

const colorClass = color ? color : "hidden";

const colorMap =new Map<string, string>([
        ['kotlin',`bg-coursecategories-kotlin`],
        ['default', "bg-coursecategories"],
        ['akka-pekko', "bg-coursecategories-akkapekko"],
        ["bundle", "bg-coursecategories-bundle"],
        ["flink", "bg-coursecategories-flink"],
        ["scala", "bg-coursecategories-scala"],
        ["spark", "bg-coursecategories-spark"],
        ["typelevel", "bg-coursecategories-typelevel"],
        ["zio", "bg-coursecategories-zio"]
    ]);

const getColor = (id: string) => {
  if (!colorMap.has(id)) {
    return colorMap.get('default');
  }

  return colorMap.get(id);
}



console.log(colorClass + " " + title);
---

<section>
  {title &&
    <header class:list={["mx-auto", category ? getColor(category.id) : getColor("test")]}>
      <H2 {color} class="text-center mx-auto">{title}</H2>
    </header>
  }
  <div
    class="py-16 px-8 w-full relative mx-auto overflow-y-hidden overflow-x-visible"
  >
    {showGradient && <BackgroundGradient />}
    <div class="max-w-7xl z-10 mx-auto">
      <slot />
    </div>
  </div>
</section>
