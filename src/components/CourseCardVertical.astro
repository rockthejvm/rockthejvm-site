---
import { Image } from "astro:assets";
import { type CollectionEntry } from "astro:content";

// const articles = await getCollection("articles");
// const latestArticles = articles
//   .sort((a, b) => (a.data.publishedDate > b.data.publishedDate ? -1 : 1))
//   .slice(0, 3);

interface Props {
  course: CollectionEntry<"courses">;
}

const { course } = Astro.props;
---

<div class="card-shadow card-shadow-color h-full max-w-sm rounded-xl">
  <div class="relative size-full overflow-hidden rounded-xl bg-secondary">
    <a
      href={`/courses/${course.slug}`}
      class="h-full max-w-sm hover:no-underline"
    >
      <div class="max-h-52 w-full overflow-hidden">
        <Image
          src={course.data.heroImage}
          alt={course.data.title}
          class="min-h-full min-w-full object-cover object-center"
        />
      </div>
    </a>
    <div class="mx-auto mb-4 w-full">
      <div class="mx-auto px-4">
        <a
          href={`/courses/${course.slug}`}
          class="h-full max-w-sm hover:no-underline"
        >
          <h3
            class="my-4 text-center text-xl font-bold tracking-tight text-content-2 hover:text-accent-2 sm:text-2xl lg:text-3xl"
          >
            {course.data.title}
          </h3>
        </a>
        <div class="py-4 sm:py-4">
          <Fragment
            set:html={course.data.excerpt}
            class="text-base text-content-1 sm:text-sm lg:text-base"
          />
        </div>
      </div>
    </div>
    <!-- {
        showPrice && (
          <div class="bottom-2 absolute h-10 w-full flex items-end justify-end text-content-2 font-extrabold pr-4 pt-4">
            <CoursePrice pricingPlanId={course.data.pricingPlanId} client:load />
          </div>
        )
      } -->
  </div>
</div>
