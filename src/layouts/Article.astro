---
import { getEntry } from "astro:content";
import Base from "./Base.astro";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

interface Props {
  frontmatter: CollectionEntry<"articles">["data"];
}

const { frontmatter } = Astro.props;
const {
  canonicalUrl,
  description,
  excerpt,
  heroImage,
  publishedDate,
  summary,
  tags,
  title,
  updatedDate,
  video,
} = frontmatter;
const { data: author } = await getEntry(
  frontmatter.author.collection,
  frontmatter.author.id,
);
const series = frontmatter.series
? await getEntry(frontmatter.series.collection, frontmatter.series.id)
: undefined;

type banner = ImageMetadata;
const banner = "../assets/images/banner.jpeg";
// const formatDate = (date: Date) =>
//   date.toLocaleDateString("en-US", {
//     weekday: "short",
//     month: "short",
//     day: "2-digit",
//     timeZone: "UTC",
//   });
---

<Base
  article={{
    author: {
      name: author.name,
      // add a twitter username if available
      twitter: author.socials?.twitter ? { username: author.socials.twitter } : undefined,
    }
    updatedTime: updatedDate
    publishedTime: Date;
    section: string;
    tags: string[];
    video?: string;
  }}
  canonicalUrl={canonicalUrl ? new URL(canonicalUrl) : undefined}
  description={description ?? excerpt}
  image={heroImage
    ? { alt: heroImage.alt, src: heroImage.image.src }
    : undefined}
  {title}
  type="article"
>
  <article>
    <h1>{title}</h1>
    <FormattedDate date={publishedDate} />
    {summary && <summary>{summary}</summary>}
    <slot />
  </article>
</Base>
